@model Wardship.Models.WardshipRecord

@{
    ViewBag.Title = "Create a new Wardship record";
}
<h1>@ViewBag.Title</h1>
<h6>@Html.ActionLink("Wardship Records", "Index") > Create</h6>

@using (Html.BeginForm()) 
{
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken();
    <fieldset>
        <legend>Wardship Record details</legend>

        <div class="editor-label">
                @Html.LabelFor(model => model.ChildSurname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="editor-field">
                    @Html.EditorFor(model => model.ChildSurname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ChildSurname, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.ChildForenames, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="editor-field">
                    @Html.EditorFor(model => model.ChildForenames, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ChildForenames, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.ChildDateofBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="editor-field">
                    @Html.EditorFor(model => model.ChildDateofBirth, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ChildDateofBirth, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.DateOfOS, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="editor-field">
                    @Html.EditorFor(model => model.DateOfOS, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateOfOS, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.FileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="editor-field">
                    @Html.EditorFor(model => model.FileNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FileNumber, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.FileDuplicate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="editor-field">
                    @Html.EditorFor(model => model.FileDuplicate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FileDuplicate, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.Xreg, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="editor-field">
                    @Html.EditorFor(model => model.Xreg, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Xreg, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.TypeID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.TypeID, (SelectList)ViewBag.TypeID, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TypeID, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.CourtID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.CourtID, (SelectList)ViewBag.CourtID, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CourtID, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.StatusID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.StatusID, (SelectList)ViewBag.StatusID, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StatusID, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.GenderID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.GenderID, (SelectList)ViewBag.GenderID, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GenderID, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.RecordID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.RecordID, (SelectList)ViewBag.RecordID, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RecordID, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.LapsedID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.LapsedID, (SelectList)ViewBag.LapsedID, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LapsedID, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.CWOID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.CWOID, (SelectList)ViewBag.CWOID, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CWOID, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.DistrictJudgeID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.DistrictJudgeID, (SelectList)ViewBag.DistrictJudgeID, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DistrictJudgeID, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.CaseTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.CaseTypeID, (SelectList)ViewBag.CaseTypeID, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CaseTypeID, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.CAFCASSID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.CAFCASSID, (SelectList)ViewBag.CAFCASSID, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CAFCASSID, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.LapseLetterSent, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="editor-field">
                    @Html.EditorFor(model => model.LapseLetterSent, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LapseLetterSent, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.FirstAppointmentDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="editor-field">
                    @Html.EditorFor(model => model.FirstAppointmentDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstAppointmentDate, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.HearingDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="editor-field">
                    @Html.EditorFor(model => model.HearingDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HearingDate, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="editor-field">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>