@model Wardship.Models.WardshipRecord

@{
    ViewBag.Title = string.Format("Amend Wardship record {0}", Model.WardshipCaseID);
}
<h1>@ViewBag.Title</h1>
<h6>@Html.ActionLink("Wardship Records", "Index") > @Html.ActionLink(Model.FileNumber.ToString(), "Details", new { id = Model.WardshipCaseID }, null) > Edit</h6>

@using (Html.BeginForm("Edit", "WardshipRecord", FormMethod.Post, new { @id = "editForm" })) 
{
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken();
    <fieldset>
        <legend>@ViewBag.Title</legend>

        <div class="editor-label">
            @Html.Label("FileNumber", "Wardship number")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FileNumber)
            @Html.ValidationMessageFor(model => model.FileNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ChildSurname, true)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ChildSurname)
            @Html.ValidationMessageFor(model => model.ChildSurname)
        </div>
    
        <div class="editor-label">
            @Html.LabelFor(model => model.ChildForenames, true)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ChildForenames)
            @Html.ValidationMessageFor(model => model.ChildForenames)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CaseTypeID, true)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.CaseTypeID, (SelectList)ViewBag.CaseTypeID)
            @Html.ValidationMessageFor(model => model.CaseTypeID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TypeID, true)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.TypeID, (SelectList)ViewBag.TypeID)
            @Html.ValidationMessageFor(model => model.TypeID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CourtID, true)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.CourtID, (SelectList)ViewBag.CourtID)
            @Html.ValidationMessageFor(model => model.CourtID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ChildDateofBirth, true)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ChildDateofBirth, new { htmlAttributes = new { @class = "datepicker", @value = Model.ChildDateofBirth.HasValue ? Model.ChildDateofBirth.Value.ToString("dd/MM/yyyy") : "" } })
            @Html.ValidationMessageFor(model => model.ChildDateofBirth)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.GenderID, true)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.GenderID, (SelectList)ViewBag.GenderID)
            @Html.ValidationMessageFor(model => model.GenderID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DateOfOS, true)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateOfOS, new { htmlAttributes = new { @class = "datepicker", @value = Model.DateOfOS.HasValue ? Model.DateOfOS.Value.ToString("dd/MM/yyyy") : "" } })
            @Html.ValidationMessageFor(model => model.DateOfOS)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RecordID, true)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.RecordID, (SelectList)ViewBag.RecordID)
            @Html.ValidationMessageFor(model => model.RecordID)
        </div>

        <div class="editor-label">
            @Html.Label("DistrictJudgeID", "Judge")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.DistrictJudgeID, (SelectList)ViewBag.DistrictJudgeID)
            @Html.ValidationMessageFor(model => model.DistrictJudgeID)
        </div>
    </fieldset>

    <fieldset>
        <legend>Case Status</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.LapseLetterSent, true)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LapseLetterSent, new { htmlAttributes = new { @class = "datepicker", @value = Model.LapseLetterSent.HasValue ? Model.LapseLetterSent.Value.ToString("dd/MM/yyyy") : "" } })
            @Html.ValidationMessageFor(model => model.LapseLetterSent)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LapsedID, true)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.LapsedID, (SelectList)ViewBag.LapsedID)
            @Html.ValidationMessageFor(model => model.LapsedID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StatusID, true)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.StatusID, (SelectList)ViewBag.StatusID, new { @id = "StatusID" })
            @Html.ValidationMessageFor(model => model.StatusID)
        </div>

        <div class="editor-label" id="customStatusReasonLabel" style="display:none;">
            @Html.LabelFor(model => model.CustomStatusReason, "Custom Status Reason")
        </div>
        <div class="editor-field" id="customStatusReasonField" style="display:none;">
            @Html.EditorFor(model => model.CustomStatusReason)
            @Html.ValidationMessageFor(model => model.CustomStatusReason)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CWOID, true)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.CWOID, (SelectList)ViewBag.CWOID)
            @Html.ValidationMessageFor(model => model.CWOID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FirstAppointmentDate, true)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FirstAppointmentDate, new { htmlAttributes = new { @class = "datepicker", @value = Model.FirstAppointmentDate.HasValue ? Model.FirstAppointmentDate.Value.ToString("dd/MM/yyyy") : "" } })
            @Html.ValidationMessageFor(model => model.FirstAppointmentDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.HearingDate, true)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.HearingDate, new { htmlAttributes = new { @class = "datepicker", @value = Model.HearingDate.HasValue ? Model.HearingDate.Value.ToString("dd/MM/yyyy") : "" } })
            @Html.ValidationMessageFor(model => model.HearingDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CAFCASSInvolvedID, true)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.CAFCASSInvolvedID, (SelectList)ViewBag.CAFCASSInvolvedID)
            @Html.ValidationMessageFor(model => model.CAFCASSInvolvedID)
        </div>

        @Html.HiddenFor(model => model.WardshipCaseID)
        @Html.HiddenFor(model => model.FileDuplicate)
        @Html.HiddenFor(model => model.Xreg)
        @Html.HiddenFor(model => model.Username)
        @Html.HiddenFor(model => model.Deleted)
    </fieldset>

    <p>
        <input type="submit" value="Save" />
    </p>
}   

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('#StatusID').change(function () {
                if ($(this).val() == '0') {
                    $('#customStatusReasonLabel').show();
                    $('#customStatusReasonField').show();
                } else {
                    $('#customStatusReasonLabel').hide();
                    $('#customStatusReasonField').hide();
                }
            });

            // Trigger change event on page load to handle pre-selected value
            $('#StatusID').change();

            $('.datepicker').datepicker({
                dateFormat: 'dd/mm/yy',
                changeYear: true,
                yearRange: '-90:+3'
            });
        });
    </script>
}