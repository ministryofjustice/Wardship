@model Wardship.Models.WardshipRecord

@{
    ViewBag.Title = Model != null ? string.Format("Amend Wardship record {0}", Model.WardshipCaseID) : "Amend Wardship Record";
}
<h1>@ViewBag.Title</h1>
<h6>
    @Html.ActionLink("Wardship Records", "Index")
    @if (Model != null && Model.FileNumber != null && Model.WardshipCaseID != null)
    {
        <text> > @Html.ActionLink(Model.FileNumber.ToString(), "Details", new { id = Model.WardshipCaseID }, null) > Edit</text>
    }
</h6>

@if (Model != null)
{
    using (Html.BeginForm("Edit", "WardshipRecord", FormMethod.Post, new { @id = "editForm" }))
    {
        @Html.ValidationSummary(true)
        @Html.AntiForgeryToken()
        <fieldset>
            <legend>@ViewBag.Title</legend>

            <div class="editor-label">
                @Html.Label("FileNumber", "Wardship number")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.FileNumber)
                @Html.ValidationMessageFor(model => model.FileNumber)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.ChildSurname)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ChildSurname)
                @Html.ValidationMessageFor(model => model.ChildSurname)
            </div>
        
            <div class="editor-label">
                @Html.LabelFor(model => model.ChildForenames)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ChildForenames)
                @Html.ValidationMessageFor(model => model.ChildForenames)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.CaseTypeID)
            </div>
            <div class="editor-field">
                @Html.DropDownList("CaseTypeID", ViewBag.CaseTypeID != null ? (SelectList)ViewBag.CaseTypeID : new SelectList(Enumerable.Empty<SelectListItem>()), "Select a Case Type")
                @Html.ValidationMessageFor(model => model.CaseTypeID)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.TypeID)
            </div>
            <div class="editor-field">
                @Html.DropDownList("TypeID", ViewBag.TypeID != null ? (SelectList)ViewBag.TypeID : new SelectList(Enumerable.Empty<SelectListItem>()), "Select a Type")
                @Html.ValidationMessageFor(model => model.TypeID)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.CourtID)
            </div>
            <div class="editor-field">
                @Html.DropDownList("CourtID", ViewBag.CourtID != null ? (SelectList)ViewBag.CourtID : new SelectList(Enumerable.Empty<SelectListItem>()), "Select a Court")
                @Html.ValidationMessageFor(model => model.CourtID)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.ChildDateofBirth)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ChildDateofBirth, new { htmlAttributes = new { @value = ViewBag.ChildDateofBirth } })
                @Html.ValidationMessageFor(model => model.ChildDateofBirth)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.GenderID)
            </div>
            <div class="editor-field">
                @Html.DropDownList("GenderID", ViewBag.GenderID != null ? (SelectList)ViewBag.GenderID : new SelectList(Enumerable.Empty<SelectListItem>()), "Select a Gender")
                @Html.ValidationMessageFor(model => model.GenderID)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.DateOfOS)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.DateOfOS, new { htmlAttributes = new { @value = ViewBag.DateOfOS } })
                @Html.ValidationMessageFor(model => model.DateOfOS)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.RecordID)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.RecordID, ViewBag.RecordID != null ? (SelectList)ViewBag.RecordID : new SelectList(Enumerable.Empty<SelectListItem>()))
                @Html.ValidationMessageFor(model => model.RecordID)
            </div>

            <div class="editor-label">
                @Html.Label("DistrictJudgeID", "Judge")
            </div>
            <div class="editor-field">
                @Html.DropDownList("DistrictJudgeID", ViewBag.DistrictJudgeID != null ? (SelectList)ViewBag.DistrictJudgeID : new SelectList(Enumerable.Empty<SelectListItem>()), "Select a Judge")
                @Html.ValidationMessageFor(model => model.DistrictJudgeID)
            </div>

            <fieldset>
                <legend>Case Status</legend>

                <div class="editor-label">
                    @Html.LabelFor(model => model.LapseLetterSent)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.LapseLetterSent)
                    @Html.ValidationMessageFor(model => model.LapseLetterSent)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.LapsedID)
                </div>
                <div class="editor-field">
                    @Html.DropDownList("LapsedID", ViewBag.LapsedID != null ? (SelectList)ViewBag.LapsedID : new SelectList(Enumerable.Empty<SelectListItem>()), "Select a Lapsed status")
                    @Html.ValidationMessageFor(model => model.LapsedID)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.StatusID)
                </div>
                <div class="editor-field">
                    @Html.DropDownList("StatusID", ViewBag.StatusID != null ? (SelectList)ViewBag.StatusID : new SelectList(Enumerable.Empty<SelectListItem>()), "Select a Status")
                    @Html.ValidationMessageFor(model => model.StatusID)
                </div>

                <div class="editor-label" id="customStatusReasonLabel" style="display:none;">
                    @Html.LabelFor(model => model.CustomStatusReason, "Custom Status Reason")
                </div>
                <div class="editor-field" id="customStatusReasonField" style="display:none;">
                    @Html.EditorFor(model => model.CustomStatusReason)
                    @Html.ValidationMessageFor(model => model.CustomStatusReason)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.CWOID)
                </div>
                <div class="editor-field">
                    @Html.DropDownList("CWOID", ViewBag.CWOID != null ? (SelectList)ViewBag.CWOID : new SelectList(Enumerable.Empty<SelectListItem>()), "Select a CWO status")
                    @Html.ValidationMessageFor(model => model.CWOID)
                </div>
            </fieldset>

            <p>
                <input type="submit" value="Save" class="btn btn-primary" />
            </p>
        </fieldset>
    }
}
else
{
    <p>Error: Unable to load the Wardship Record. Please try again or contact support.</p>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>